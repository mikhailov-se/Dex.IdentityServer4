# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: publish
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    branches:
      - 'main'       # Run the workflow when pushing to the main branch
  pull_request:
    branches:
      - '*'          # Run the workflow for all pull requests

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  build_nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Get all history to allow automatic versioning using MinVer
        
              
      # Install the .NET SDK indicated in the global.json file
      - name: Create Nugets
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.100
      - run: |
            wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update
            sudo apt-get install -y aspnetcore-runtime-3.1
            chmod +x build.sh  # Make the script executable
            ./build.sh         # Run the script

        # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v3
        with:
            name: nuget
            if-no-files-found: error
            retention-days: 7
            path: ./nuget/*.nupkg
            
  push_nuget:
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      needs: [ build_nuget ]
      steps:
          # Download the NuGet package created in the previous job
          -   uses: actions/download-artifact@v3
              with:
                  name: nuget
                  path: ./nuget
          
          # Install the .NET SDK indicated in the global.json file
          -   name: Setup .NET Core
              uses: actions/setup-dotnet@v3

          -   name: Publish NuGet package
              run: |
                  cd ./nuget
                  find . -name '*.nupkg' -type f -print0 |
                  while IFS= read -r -d '' nuget; do
                    dotnet nuget push "$nuget" --api-key "${{ secrets.NUGET_APIKEY }}" --source "${{ secrets.NUGET_SOURCE }}" --skip-duplicate
                  done